# for convenience, define variable $(OBJS) to list of object files

OBJS= interface.o

# make has a "default rule" specifying how to build a an "object" file (.o) from a C source file (.c)
#            this rule includes $(CFLAGS) as one of cc's parameters
CFLAGS=-g -O3 # -g for debug, -O3 for optimization

# first target is built by default.  Usually named "all"
all: interface

# interface (target) depends on all object files (prerequisites)
interface: $(OBJS)
	cc -o interface $(CFLAGS) $(OBJS)

# all object files built from c files that include tokenizer.h and history.h
$(OBJS): # tokenizer.h, history.h //commented out to be used in later parts.  Unnecesary during part A

# deletes files generated by compilation
clean:
	rm -f *.o interface

run:interface
	./interface
